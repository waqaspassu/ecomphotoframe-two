// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SizesCase {
  small
  medium
  large
}

enum MaterialFrame {
  gold
  diamond
}

enum FinishesFrame {
  smooth
  plaintextured
}

enum ColorFrames {
  red
  blue
  green
}

enum OrderStatus {
  awaiting
  rejected
  fullfilled
}

model Order {
  id              String        @id @default(uuid())
  configurationId String
  configuraiton   Configuration @relation(fields: [configurationId], references: [id])
  User            User?         @relation(fields: [userId], references: [id])
  userId          String?
  amount          Float
  isPaid          Boolean       @default(false)
  status          OrderStatus   @default(awaiting)

  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?

  bilingAddress    BillingAddress? @relation(fields: [billingAddressId], references: [id])
  billingAddressId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  order       Order[]
}

model BillingAddress {
  id           String  @id @default(cuid())
  name         String
  street       String
  city         String
  postalCode   String
  courtry      String
  state        String?
  phoneNumeber String?
  Order        Order[]
}

model Configuration {
  id              String  @id @default(cuid())
  width           Int
  height          Int
  croppedImageUrl String?
  imgUrl          String?

  sizes     SizesCase?
  materials MaterialFrame?
  finishes  FinishesFrame?
  color     ColorFrames?
  Order     Order[]
}

model User {
  id        String   @id @default(cuid())
  email     String
  Order     Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
